<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <debug/>
    <http pattern="classpath:/webside/dist/css/**" security="none"/>
    <!--<http pattern="classpath:/webside/index.html" security="none"/>-->

    <http auto-config="true">
        <intercept-url pattern="/**" access="hasRole('USER')" />
        <http-basic/>
        <!--requires-channel="https"-->

        <!--<form-login login-page="classpath*:/webside/authenticate/login.html"/>-->
        <!--<logout logout-url="classpath*:/webside/index.html"/>-->

        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
        </session-management>
    </http>

    <beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="bcryptEncoder"/>
            <user-service>
                <user name="alex" password="$2a$10$fL.Y7YyfO4Fn.gJ/izPXdOq27ThgrcGMmAkIeYn8CEy2L7oVLBSya"
                      authorities="ROLE_USER, ROLE_ADMIN" />
                <user name="helen" password="$2a$10$fL.Y7YyfO4Fn.gJ/izPXdOq27ThgrcGMmAkIeYn8CEy2L7oVLBSya"
                      authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource" id="userDetailsService"
                               users-by-username-query="SELECT user_name, password, true as enabled
                                                        FROM acounts
                                                        WHERE user_name=?"
                               authorities-by-username-query="SELECT user_name, 'ROLE_USER' as authorities
                                                                FROM acounts
                                                                WHERE user_name=?"/>
        </authentication-provider>
    </authentication-manager>

    <!--<beans:bean id="userDetailsService"-->
          <!--class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">-->
        <!--<beans:property name="dataSource" ref="dataSource"/>-->

    <!--</beans:bean>-->

</beans:beans>